<?xml version="1.0" encoding="utf-8"?>

<!-- xsl-stylesheet for generating a config file for standoff-mode from owl

Copyright (C) 2015 Christian Lück

Author: Christian Lück <christian.lueck@ruhr-uni-bochum.de>
URL: https://github.com/lueck/standoff-mode

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this file. If not, see <http://www.gnu.org/licenses/>.

Usage:

with xalan on bash:

bash$ xalan -xsl owl2config.xsl -in path/to/owl-file -out myconfig.el [ -param config-file \"myconfig.el\"]

-->

<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:arb="http://beispiel.fernuni-hagen.de/ontologies/beispiel#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    version="1.0">
  <xsl:output method="text"/>

  <xsl:param name="config-file">
    <xsl:text>standoff-config.el</xsl:text>
  </xsl:param>
  
  <xsl:template match="text()"/>
  
  <xsl:template match="/">
    <xsl:text>;;; </xsl:text>
    <xsl:value-of select="$config-file"/>
    <xsl:text> --- autogenerated configuration for standoff-mode
    &#10;;; This file was generated using owl2config.xsl&#10;
    &#10;;;; Code:&#10;
    </xsl:text>

    <!-- markup types -->
    <xsl:text>&#10;(setq standoff-markup-types-allowed '(</xsl:text>
    <xsl:apply-templates select="*" mode="standoff-markup-types-allowed"/>
    <xsl:text>&#10;  ))&#10;</xsl:text>

    <!-- labels for markup types -->
    <xsl:text>&#10;(setq standoff-markup-labels '(</xsl:text>
    <xsl:apply-templates select="*" mode="standoff-markup-labels"/>
    <xsl:text>&#10;  ))&#10;</xsl:text>

    <!-- relations -->
    <xsl:text>&#10;(setq standoff-relations-allowed '(</xsl:text>
    <xsl:apply-templates select="*" mode="standoff-relations-allowed"/>
    <xsl:text>&#10;  ))&#10;</xsl:text>

    <xsl:text>&#10;;;; </xsl:text>
    <xsl:value-of select="$config-file"/>
    <xsl:text> ends here.&#10;</xsl:text>
  </xsl:template>

  
  <!-- templates for standoff-markup-types-allowed -->
  
  <xsl:template match="owl:Class" mode="standoff-markup-types-allowed">
    <xsl:text>&#10;  "</xsl:text>
    <xsl:value-of select="@rdf:about"/>
    <xsl:text>"</xsl:text>
  </xsl:template>

  <xsl:template match="text()|@*" mode="standoff-markup-types-allowed"/>


  <!-- templates for standoff-markup-labels -->
  
  <xsl:template match="owl:Class" mode="standoff-markup-labels">
    <xsl:text>&#10;  ("</xsl:text>
    <xsl:value-of select="@rdf:about"/>
    <xsl:text>" . "</xsl:text>
    <xsl:value-of select="rdfs:label"/>
    <xsl:text>")</xsl:text>
  </xsl:template>
  
  <xsl:template match="text()|@*" mode="standoff-markup-labels"/>


  <!-- templates for standoff-relations-allowed -->

  <xsl:template match="owl:ObjectProperty" mode="standoff-relations-allowed">
    <xsl:text>&#10;  ((</xsl:text>
    <xsl:apply-templates mode="standoff-relations-allowed.subject"/>
    <xsl:text>) "</xsl:text>
    <xsl:value-of select="@rdf:about"/>
    <xsl:text>" (</xsl:text>
    <xsl:apply-templates mode="standoff-relations-allowed.object"/>
    <xsl:text>))</xsl:text>
  </xsl:template>

  <xsl:template match="text()|@*" mode="standoff-relations-allowed"/>

  <!-- rdfs:domain defines a subject -->
  <xsl:template match="rdfs:domain" mode="standoff-relations-allowed.subject">
    <xsl:text>"</xsl:text>
    <xsl:value-of select="@rdf:resource"/>
    <xsl:text>" </xsl:text>
  </xsl:template>

  <!-- when it is a subPropertyOf we need to recurse the super-property -->
  <xsl:template match="rdfs:subPropertyOf" mode="standoff-relations-allowed.subject">
    <xsl:variable name="resource" select="@rdf:resource"/>
    <!--xsl:text>subPropertyOf: </xsl:text><xsl:value-of select="$resource"/-->
    <xsl:apply-templates
	select="../../owl:ObjectProperty[@rdf:about=$resource]"
	mode="standoff-relations-allowed.subject"/>
  </xsl:template>
  
  <xsl:template match="text()|@*" mode="standoff-relations-allowed.subject"/>


  <xsl:template match="rdfs:range" mode="standoff-relations-allowed.object">
    <xsl:text>"</xsl:text>
    <xsl:value-of select="@rdf:resource"/>
    <xsl:text>" </xsl:text>
  </xsl:template>
  
  <xsl:template match="rdfs:subPropertyOf" mode="standoff-relations-allowed.object">
    <xsl:variable name="resource" select="@rdf:resource"/>
    <!--xsl:text>subPropertyOf: </xsl:text><xsl:value-of select="$resource"/-->
    <xsl:apply-templates
	select="../../owl:ObjectProperty[@rdf:about=$resource]"
	mode="standoff-relations-allowed.object"/>
  </xsl:template>
  
  <xsl:template match="text()|@*" mode="standoff-relations-allowed.object"/>

  
</xsl:stylesheet>
